"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.constructNamespaceDependency = void 0;
const base_node_impl_1 = require("../base_node_impl");
function constructNamespaceDependency(namespace) {
    const addressSpace = namespace.addressSpace;
    const namespace_ = namespace;
    // navigate all namespace recursively to
    // find dependency
    const dependency = [];
    const depMap = new Set();
    // default namespace is always first
    dependency.push(addressSpace.getDefaultNamespace());
    depMap.add(dependency[0].index);
    if (namespace !== addressSpace.getDefaultNamespace()) {
        dependency.push(namespace);
        depMap.add(namespace.index);
    }
    for (const node of namespace_.nodeIterator()) {
        // visit all reference
        const references = node.ownReferences();
        for (const reference of references) {
            // check referenceId
            const namespaceIndex = (0, base_node_impl_1.getReferenceType)(reference).nodeId.namespace;
            if (!depMap.has(namespaceIndex)) {
                depMap.add(namespaceIndex);
                dependency.push(addressSpace.getNamespace(namespaceIndex));
            }
            const namespaceIndex2 = reference.nodeId.namespace;
            if (!depMap.has(namespaceIndex2)) {
                depMap.add(namespaceIndex2);
                dependency.push(addressSpace.getNamespace(namespaceIndex2));
            }
        }
    }
    return dependency;
}
exports.constructNamespaceDependency = constructNamespaceDependency;
//# sourceMappingURL=construct_namespace_dependency.js.map